// <PowerTools.RegisterEvent[]>[
//   {
//     formId: "54030c9f-2e0d-4a6f-b2c2-ac01ca342bf6",
//     event: "onload",
//     executionContext: true,
//     triggerId: "c9bd9b02-8be7-4cfb-8493-367b1592398a",
//     function: "SOLUTIONPREFIX.ClassName.OnLoad",
//   },
// ];


export class ClassName {
  static async OnLoad(executionContext: Xrm.ExecutionContext<unknown, unknown>): Promise<void> {
    const form = <Form.TableName.Main.FormName>executionContext.getFormContext();
    console.log(form.ui.setFormNotification("Loaded", "INFO", "demoid"));

    this.BindEvents(form);
    this.OnLoadLogic(form);
  }

  static async OnLoadLogic(form: Form.TableName.Main.FormName) {
    switch (form.ui.getFormType().valueOf()) {
      case Xrm.FormType.Create:
        // Add logic to run on new records
        break;
      case Xrm.FormType.Update:
        // Add logic to run on existing records
        break;
    }
    // add OnLoad logic here
  }

  static async BindEvents(form: Form.TableName.Main.FormName) {
    form.data.entity.addOnSave(() => this.OnSave(form));
    //Add Bind events here
  }

  static async OnSave(executionContext: Form.TableName.Main.FormName) {
    //Add On Save logic here
  }
}
